{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","transition/pop.module.css","components/PhoneBook/PhoneBook.module.css","components/Error/Error.module.css","transition/slide.module.css","components/ContactForm/ContactForm.module.css","services/constants.js","redux/contacts/contactsTypes.js","redux/contacts/contactsActions.js","redux/selectors.js","services/localStorage.js","components/ContactForm/ContactForm.js","redux/filter/filterTypes.js","redux/filter/filterActions.js","components/Filter/Filter.js","components/ContactList/ContactList.js","components/Error/Error.js","components/PhoneBook/PhoneBook.js","redux/contacts/contactsReducers.js","redux/filter/filterReducers.js","redux/rootReducer.js","redux/middleware/throttle.js","redux/store.js","redux/middleware/logger.js","redux/middleware/timeout.js","index.js","components/App.js"],"names":["module","exports","ALL_ID","nameId","shortid","generate","numberId","finedId","addContact","contacts","type","types","payload","removeContact","id","getContacts","store","phoneBook","getFilter","filter","getFilterContacts","contact","nameContact","name","toLowerCase","includes","getContactsLength","length","getFilterContactsLength","saveToLocalStorage","key","value","localStorage","setItem","JSON","stringify","error","Error","INITIAL_STATE","number","ContactForm","state","handleChange","e","target","setState","alert","message","PNotify","text","animate","in_class","out_class","delay","handleSubmit","preventDefault","props","find","this","nameIsValid","numberIsValid","isActiveName","styles","input","inputInvalid","isActiveNumber","isActiveBTN","isActive","button","disabled","CSSTransition","in","timeout","unmountOnExit","classNames","pop","className","section–°ontact","onSubmit","htmlFor","title","onChange","placeholder","required","Component","connect","selectors","dispatch","data","contactsActions","filterAction","filterActions","section","inputWrap","formInputBtn","onClick","filterContacts","clickDelete","btnContact","currentTarget","removeWithLocalStorage","TransitionGroup","component","list","map","slide","item","wrap","children","errorText","PhoneBook","setContactsWithLocalStorage","storage","items","getItem","parse","getToLocalStorage","contactsLength","filterContactsLength","contactsReducers","action","filterReducers","rootReducer","combineReducers","throttled","middleware","next","console","group","info","groupEnd","time","meta","throttle","setTimeout","timeoutId","clearTimeout","enhancer","composeWithDevTools","applyMiddleware","createStore","ReactDOM","render","path","exact","document","getElementById"],"mappings":"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","file":"static/js/main.546cff92.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Filter_section__32-XW\",\"filter\":\"Filter_filter__3u4wo\",\"title\":\"Filter_title__1Mq6v\",\"inputWrap\":\"Filter_inputWrap__czzI5\",\"input\":\"Filter_input__IeA6N\",\"formInputBtn\":\"Filter_formInputBtn__VaGi9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1xWIx\",\"item\":\"ContactList_item__2N-1P\",\"wrap\":\"ContactList_wrap__3Ztym\",\"name\":\"ContactList_name__SLL-v\",\"number\":\"ContactList_number__r5h_z\",\"button\":\"ContactList_button__1CaZC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"pop_enter__28dba\",\"enterActive\":\"pop_enterActive__3cUxi\",\"exit\":\"pop_exit__2F5Lc\",\"exitActive\":\"pop_exitActive__1jVBe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"PhoneBook_section__BXiWQ\",\"wrapTitle\":\"PhoneBook_wrapTitle__2-n25\",\"title\":\"PhoneBook_title__13DRG\",\"subTitle\":\"PhoneBook_subTitle__2mHh9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Error_error__3C3vs\",\"errorText\":\"Error_errorText__1qivb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slide_enter__DDQJD\",\"enterActive\":\"slide_enterActive__17luF\",\"exit\":\"slide_exit__3AdmR\",\"exitActive\":\"slide_exitActive__35sJb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sectionContact\":\"ContactForm_sectionContact__2V1s_\",\"contact\":\"ContactForm_contact__um58t\",\"title\":\"ContactForm_title__1VSa_\",\"input\":\"ContactForm_input__wA_p3\",\"inputInvalid\":\"ContactForm_inputInvalid__dTJeD\",\"button\":\"ContactForm_button__38Yp5\",\"disabled\":\"ContactForm_disabled__12j1S\"};","import shortid from 'shortid';\n\nexport const ALL_ID = {\n  nameId: shortid.generate(),\n  numberId: shortid.generate(),\n  finedId: shortid.generate(),\n};\nexport const q = null;\n","export default {\n  ADD_CONTACT: 'contacts/ADD_CONTACT',\n  REMOVE_CONTACT: 'contacts/REMOVE_CONTACT',\n  SET_CONTACTS_WITH_LOCAL_STORAGE: 'contacts/SET_CONTACTS_WITH_LOCAL_STORAGE',\n};\n","import types from './contactsTypes';\n\nexport const addContact = contacts => {\n  return {\n    type: types.ADD_CONTACT,\n    payload: {\n      contacts,\n    },\n  };\n};\nexport const removeContact = id => {\n  return {\n    type: types.REMOVE_CONTACT,\n    payload: {\n      id,\n    },\n  };\n};\nexport const setContactsWithLocalStorage = contacts => {\n  return {\n    type: types.SET_CONTACTS_WITH_LOCAL_STORAGE,\n    payload: {\n      contacts,\n    },\n  };\n};\n","export const getContacts = store => store.phoneBook.contacts;\nexport const getFilter = store => store.phoneBook.filter;\nexport const getFilterContacts = store =>\n  getContacts(store).filter(contact => {\n    const nameContact = contact.name;\n    const name = getFilter(store);\n    return nameContact.toLowerCase().includes(name.toLowerCase());\n  });\nexport const getContactsLength = store => getContacts(store).length;\nexport const getFilterContactsLength = store => getFilterContacts(store).length;\n","export const saveToLocalStorage = (key, value) => {\n  try {\n    localStorage.setItem(key, JSON.stringify(value));\n  } catch (error) {\n    throw new Error(error);\n  }\n};\nexport const getToLocalStorage = key => {\n  try {\n    const items = localStorage.getItem(key);\n    return items ? JSON.parse(items) : null;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n","import React, { Component } from 'react';\nimport PNotify from 'pnotify/dist/es/PNotify';\nimport PropTypes from 'prop-types';\nimport { CSSTransition } from 'react-transition-group';\nimport { connect } from 'react-redux';\nimport shortid from 'shortid';\nimport { ALL_ID } from '../../services/constants';\nimport pop from '../../transition/pop.module.css';\nimport styles from './ContactForm.module.css';\nimport * as contactsActions from '../../redux/contacts/contactsActions';\nimport * as selectors from '../../redux/selectors';\nimport { saveToLocalStorage } from '../../services/localStorage';\n\nconst INITIAL_STATE = {\n  name: '',\n  number: '',\n};\n\nclass ContactForm extends Component {\n  static propTypes = {\n    addContact: PropTypes.func.isRequired,\n    contacts: PropTypes.arrayOf(PropTypes.object).isRequired,\n  };\n\n  state = {\n    ...INITIAL_STATE,\n  };\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  alert = name => {\n    const message = `${name} is already is contacts`;\n    PNotify.error({\n      text: message,\n      animate: {\n        animate: true,\n        in_class: 'bounceInDown',\n        out_class: 'bounceOutUp',\n      },\n      delay: 2000,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { addContact, contacts } = this.props;\n    const { name, number } = this.state;\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase(),\n      )\n    ) {\n      this.alert(name);\n      return;\n    }\n    const contact = { id: shortid.generate(), name, number };\n    addContact(contact);\n    saveToLocalStorage('contacts', [...contacts, contact]);\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  render() {\n    const { nameId, numberId } = ALL_ID;\n    const { name, number } = this.state;\n    const nameIsValid = name.length > 5;\n    const numberIsValid = number.length >= 6 && number.length < 7;\n    const isActiveName =\n      nameIsValid || name.length === 0 ? styles.input : styles.inputInvalid;\n    const isActiveNumber =\n      numberIsValid || number.length === 0\n        ? styles.input\n        : styles.inputInvalid;\n    const isActiveBTN = nameIsValid && numberIsValid;\n    const isActive = isActiveBTN ? styles.button : styles.disabled;\n\n    return (\n      <CSSTransition in timeout={250} unmountOnExit classNames={pop}>\n        <section className={styles.section–°ontact}>\n          <form onSubmit={this.handleSubmit} className={styles.contact}>\n            <label htmlFor={nameId} className={styles.title}>\n              Name\n              <input\n                id={nameId}\n                className={isActiveName}\n                onChange={this.handleChange}\n                value={name}\n                name=\"name\"\n                type=\"text\"\n                placeholder=\"Input name\"\n              />\n            </label>\n            <label htmlFor={numberId} className={styles.title}>\n              Number\n              <input\n                id={numberId}\n                type=\"number\"\n                className={isActiveNumber}\n                required\n                onChange={this.handleChange}\n                value={number}\n                name=\"number\"\n                placeholder=\"Enter phone of 6 symbol\"\n              />\n            </label>\n            <button disabled={!isActiveBTN} type=\"submit\" className={isActive}>\n              Add contact\n            </button>\n          </form>\n        </section>\n      </CSSTransition>\n    );\n  }\n}\nconst mapStateToProps = store => ({\n  contacts: selectors.getContacts(store),\n});\nconst mapDispatchToProps = dispatch => ({\n  addContact: data => dispatch(contactsActions.addContact(data)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","export default {\n  ON_CHANGE: 'filter/ON_CHANGE',\n};\n","import types from './filterTypes';\n\nconst filterAction = value => {\n  return {\n    type: types.ON_CHANGE,\n    payload: {\n      filter: value,\n    },\n    // meta: {\n    //   delay: 800,\n    //   throttle: 800,\n    // },\n  };\n};\nexport default filterAction;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransition } from 'react-transition-group';\nimport { connect } from 'react-redux';\nimport pop from '../../transition/pop.module.css';\nimport styles from './Filter.module.css';\nimport { ALL_ID } from '../../services/constants';\nimport filterActions from '../../redux/filter/filterActions';\nimport * as selectors from '../../redux/selectors';\n\nconst Filter = ({ input, handleChange }) => {\n  const handleOnChange = e => {\n    handleChange(e.target.value);\n  };\n  const handleOnClean = e => {\n    handleChange('');\n  };\n  return (\n    <CSSTransition in timeout={250} unmountOnExit classNames={pop}>\n      <section className={styles.section}>\n        <form className={styles.filter}>\n          <label htmlFor={ALL_ID.htmlFor} className={styles.title}>\n            <h3>Fined contact by name</h3>\n            <span className={styles.inputWrap}>\n              <input\n                className={styles.input}\n                onChange={handleOnChange}\n                value={input}\n                name=\"input\"\n                type=\"text\"\n                placeholder=\"Input contact to find\"\n              />\n              {input.length > 0 && (\n                <button\n                  className={styles.formInputBtn}\n                  type=\"button\"\n                  onClick={handleOnClean}\n                >\n                  Delete\n                </button>\n              )}\n            </span>\n          </label>\n        </form>\n      </section>\n    </CSSTransition>\n  );\n};\nFilter.propTypes = {\n  input: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\nconst mapStateToProps = store => ({\n  input: selectors.getFilter(store),\n});\nconst mapDispatchToProps = dispatch => ({\n  handleChange: value => dispatch(filterActions(value)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport { connect } from 'react-redux';\nimport styles from './ContactList.module.css';\nimport slide from '../../transition/slide.module.css';\nimport * as contactsActions from '../../redux/contacts/contactsActions';\nimport * as selectors from '../../redux/selectors';\nimport { saveToLocalStorage } from '../../services/localStorage';\n\nconst removeWithLocalStorage = (contacts, id) => {\n  return contacts.filter(contact => contact.id !== id);\n};\nconst ContactList = ({ filterContacts, removeContact }) => {\n  const clickDelete = btnContact => {\n    const { id } = btnContact.currentTarget;\n    removeContact(id);\n    saveToLocalStorage('contacts', removeWithLocalStorage(filterContacts, id));\n  };\n\n  return (\n    <TransitionGroup component=\"ul\" className={styles.list}>\n      {filterContacts.map(contact => (\n        <CSSTransition\n          key={contact.id}\n          timeout={250}\n          unmountOnExit\n          classNames={slide}\n        >\n          <li key={contact.id} className={styles.item}>\n            <div className={styles.wrap}>\n              <span className={styles.name}>{contact.name}:</span>\n              <span className={styles.number}>{contact.number}</span>\n            </div>\n            <button\n              id={contact.id}\n              className={styles.button}\n              type=\"button\"\n              onClick={clickDelete}\n            >\n              Delete\n            </button>\n          </li>\n        </CSSTransition>\n      ))}\n    </TransitionGroup>\n  );\n};\nContactList.propTypes = {\n  filterContacts: PropTypes.arrayOf(PropTypes.object).isRequired,\n  removeContact: PropTypes.func.isRequired,\n};\nconst mapStateToProps = store => ({\n  filterContacts: selectors.getFilterContacts(store),\n});\nconst mapDispatchToProps = dispatch => ({\n  addContact: data => dispatch(contactsActions.addContact(data)),\n  removeContact: id => dispatch(contactsActions.removeContact(id)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransition } from 'react-transition-group';\nimport pop from '../../transition/pop.module.css';\nimport styles from './Error.module.css';\n\nconst Error = ({ children }) => {\n  return (\n    <CSSTransition in timeout={250} unmountOnExit classNames={pop}>\n      <div className={styles.error}>\n        <span className={styles.errorText}>{children}</span>\n      </div>\n    </CSSTransition>\n  );\n};\nError.propTypes = {\n  children: PropTypes.node.isRequired,\n};\nexport default Error;\n\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport ContactForm from '../ContactForm/ContactForm';\nimport Filter from '../Filter/Filter';\nimport ContactList from '../ContactList/ContactList';\nimport styles from './PhoneBook.module.css';\nimport Error from '../Error/Error';\nimport '../../transition/pnotify-style.css';\nimport * as contactsActions from '../../redux/contacts/contactsActions';\nimport * as selectors from '../../redux/selectors';\nimport { getToLocalStorage } from '../../services/localStorage';\n\n\nclass PhoneBook extends Component {\n  static propTypes = {\n    contactsLength: PropTypes.number.isRequired,\n    filterContactsLength: PropTypes.number.isRequired,\n    setContactsWithLocalStorage: PropTypes.func.isRequired,\n  };\n\n  state = {};\n\n  componentDidMount() {\n    const { setContactsWithLocalStorage } = this.props;\n    const storage = getToLocalStorage('contacts');\n    if (storage !== null) setContactsWithLocalStorage(storage);\n  }\n\n  render() {\n    const { contactsLength, filterContactsLength } = this.props;\n    return (\n      <section className={styles.section}>\n        <h2 className={styles.title}> Phonebook </h2>\n        <ContactForm />\n        <h2 className={styles.title}>Contacts</h2>\n        {contactsLength > 1 && <Filter />}\n        {contactsLength > 0 && <ContactList />}\n        {contactsLength < 1 && <Error>Contact list is empty!</Error>}\n        {filterContactsLength < 1 && contactsLength > 0 && (\n          <Error>Contact not found!</Error>\n        )}\n      </section>\n    );\n  }\n}\n\nconst mapStateToProps = store => ({\n  contactsLength: selectors.getContactsLength(store),\n  filterContactsLength: selectors.getFilterContactsLength(store),\n});\nconst mapDispatchToProps = dispatch => ({\n  setContactsWithLocalStorage: data =>\n    dispatch(contactsActions.setContactsWithLocalStorage(data)),\n  removeContact: id => dispatch(contactsActions.removeContact(id)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(PhoneBook);\n","import types from './contactsTypes';\n\nconst contactsReducers = (contacts = [], action) => {\n  switch (action.type) {\n    case types.ADD_CONTACT:\n      return [...contacts, action.payload.contacts];\n    case types.REMOVE_CONTACT:\n      return contacts.filter(contact => contact.id !== action.payload.id);\n    case types.SET_CONTACTS_WITH_LOCAL_STORAGE:\n      return action.payload.contacts;\n    default:\n      return contacts;\n  }\n};\nexport default contactsReducers;\n","import types from './filterTypes';\n\nconst filterReducers = (filter = '', action) => {\n  switch (action.type) {\n    case types.ON_CHANGE:\n      return action.payload.filter;\n    default:\n      return filter;\n  }\n};\nexport default filterReducers;\n","import { combineReducers } from 'redux';\nimport contactsReducers from './contacts/contactsReducers';\nimport filterReducers from './filter/filterReducers';\n\nconst rootReducer = combineReducers({\n  contacts: contactsReducers,\n  filter: filterReducers,\n});\nexport default combineReducers({ phoneBook: rootReducer });\n","const throttled = {};\nconst throttle = store => next => action => {\n  const time = action.meta && action.meta.throttle;\n  if (!time) return next(action);\n  if (throttled[action.type]) return;\n  throttled[action.type] = true;\n  setTimeout(() => {\n    throttled[action.type] = false;\n  }, time);\n  next(action);\n};\n\nexport default throttle;\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from './rootReducer';\nimport logger from './middleware/logger';\nimport timeout from './middleware/timeout';\nimport throttle from './middleware/throttle';\n\nconst middleware = [logger, throttle, timeout];\nconst enhancer = composeWithDevTools(applyMiddleware(...middleware));\n\nconst store = createStore(rootReducer, enhancer);\n\nexport default store;\n","const logger = store => next => action => {\n  console.group(action.type);\n  console.info('dispatching', action);\n  console.groupEnd(action.type);\n  next(action);\n};\nexport default logger;\n","const timeout = store => next => action => {\n  if (!action.meta || !action.meta.delay) {\n    return next(action);\n  }\n  const timeoutId = setTimeout(() => next(action), action.meta.delay);\n  return function cancel() {\n    clearTimeout(timeoutId);\n  };\n};\nexport default timeout;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport 'pnotify/dist/PNotifyBrightTheme.css';\nimport App from './components/App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport PhoneBook from './PhoneBook/PhoneBook';\n\nexport default function App() {\n  return (\n    <Switch>\n      <Route path=\"/\" exact component={PhoneBook} />\n    </Switch>\n  );\n}\n"],"sourceRoot":""}